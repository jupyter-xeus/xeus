name: CI
on:
  workflow_dispatch:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  unix:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11]
        xeus_static_dependencies: [0]
        xeus_build_shared_lib: [1]
        include:
          - os: ubuntu-20.04
            xeus_static_dependencies: 1
            xeus_build_shared_lib: 0
          - os: ubuntu-18.04
            xeus_static_dependencies: 1
            xeus_build_shared_lib: 0

    steps:
      - uses: actions/checkout@v2
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus

      - name: install cxx compiler
        shell: bash -l {0}
        run: |
          $HOME/micromamba-bin/micromamba install cxx-compiler libuuid  -c conda-forge -y

      - name: cmake configure
        shell: bash -l {0}
        run: |
          mkdir -p build
          cd build
          cmake .. \
           -DXEUS_DOWNLOAD_GTEST=OFF \
           -DXEUS_BUILD_TESTS=ON \
           -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
           -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
           -DXEUS_STATIC_DEPENDENCIES=${{ matrix.xeus_static_dependencies }} \
           -DXEUS_BUILD_SHARED_LIBS=${{ matrix.xeus_build_shared_lib }}

      - name: build
        shell: bash -l {0}
        run: |
          cd build
          make -j 2
          # make -j ${{ steps.cpu-cores.outputs.count }}

      - name: Test xeus
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 4
          max_attempts: 4
          shell: bash
          command: |
            cd build/test
            ctest --output-on-failure


      - name: install xeus
        shell: bash -l {0}
        run: |
          cd build
          make install

  win:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2019, windows-2022 ]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus

      - name: micromamba shell hook
        shell: powershell
        run: |
          micromamba shell hook -s cmd.exe -p C:\Users\runneradmin\micromamba-root

      - name: Make build directory
        run: mkdir build

      - name: cmake configure
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba-root\condabin\micromamba.bat activate xeus
          cmake .. ^
           -G Ninja ^
           -DCMAKE_BUILD_TYPE=Release ^
           -DXEUS_BUILD_TESTS=ON ^
           -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" ^
           -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
           -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%"
        working-directory: build

      - name: build
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba-root\condabin\micromamba.bat activate xeus
          set CL=/MP
          ninja install
        working-directory: build

      - name: ctest
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 4
          max_attempts: 4
          shell: cmd
          command: |
            call C:\Users\runneradmin\micromamba-root\condabin\micromamba.bat activate xeus
            set PATH=%CONDA_PREFIX%;%CONDA_PREFIX%\\Scripts;%CONDA_PREFIX%\\Library;%CONDA_PREFIX%\\Library\\bin;%PATH%
            cd build
            ctest --output-on-failure

      - name: build example -- cmake configure
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba-root\condabin\micromamba.bat activate xeus
          cd example
          mkdir -p build
          cd build
          cmake .. ^
           -G Ninja ^
           -DCMAKE_BUILD_TYPE=Release ^
           -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" ^
           -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library"

      - name: build example -- build
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba-root\condabin\micromamba.bat activate xeus
          cd example
          cd build
          set CL=/MP
          ninja

  emscripten_wasm:

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        emsdk: ["2.0.32", "latest"]
    steps:
      - uses: actions/checkout@v2
      - uses: docker-practice/actions-setup-docker@master
      - run: |
          chmod +x test/test_emscripten.sh
          ./test/test_emscripten.sh BUILD ${{ matrix.emsdk }}
